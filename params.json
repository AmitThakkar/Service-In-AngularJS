{
  "name": "Service In Angularjs",
  "tagline": "This repository is for exploring Service Providers in AngularJS.",
  "body": "Service In AngularJS\r\n====================\r\n\r\nThis repository is for exploring Service Providers in AngularJS.\r\n\r\nWhen we are working on **MVC** (or **MVVM** for **AngularJS**) **Design-Patterns**, our application is loosely coupled because of  different independent components defined for e.g. **Controller**, **View**, **Services**, **Modal/Data** etc. All the components have their own work/role but today we will discuss only **Services**.\r\n\r\n**Services** are that part of application where we write our business logic and load data (if it is frond-end framework Service e.g. **AngularJS** **Service** then it loads data from Web Server and if it is back-end framework Service e.g. **NodeJS** **Service** then it loads data from Database Server or other Web Server). **AngularJS** also provides many built-in **services** e.g. **$http**, **$q** etc. **$http** is very commonly used **service** which helps us to load data from Web Server, we can hit Ajax request with the help of **$http** **service**, which internally hits **XMLHTTPRequest**.\r\n\r\nGenerally, instead of writing **Services**  we do data loading from Web-Server in **Controllers**, which is obviously a bad practice. So lets try a basic program, where we will load data from Web-Server with the help of **Service** instead of writing the code into **Controller**.\r\n\r\n```JavaScript\r\nvar serviceTestApp = angular.module('serviceTest', []);\r\n\r\n/*\r\n * Defining TestService, Which will load User list Asynchronously(From Web-Server).\r\n * for demo purpose we are using setTimeout().\r\n *\r\n * $q is built-in Angular Service which helps us to implement Promise-Defer Design Pattern and\r\n * will be injected to TestService by AngularJS via DI(Dependency Injection) Design Pattern.\r\n * */\r\nserviceTestApp.service('TestService', function ($q) {\r\n    // Defining Service function: getUsers which will load user list\r\n    this.getUsers = function () {\r\n        var deferred = $q.defer();\r\n        setTimeout(function () {\r\n            var users = [\r\n                {name: \"Amit Thakkar\", age: 25},\r\n                {name: \"Namita\", age: 36},\r\n                {name: \"Kanika\", age: 43}\r\n            ];\r\n            deferred.resolve(users);\r\n        }, 2000);\r\n        return deferred.promise;\r\n    };\r\n});\r\n```\r\n\r\nAlso, **Services** must be registered with **module**(Same as **[directives](http://codechutney.in/blog/angularjs/component-in-angularjs/)**) via **module.service** API, in which first argument is the name of the **Service** and second argument is the function. Second argument function is just a constructor function that will be called with **'new'** keyword by **AngularJS** itself. And this **Service** will be injected to **Controllers** or other **Services** (**AngularJS** also implement **Dependency Injection** Design Pattern to inject **services** to **Controllers** and **Services**).\r\n\r\n```JavaScript\r\n/*\r\n * Defining TestController, who will use TestService to get User List.\r\n * */\r\nfunction TestController($scope, TestService) {\r\n    // Calling getUsers function on TestService.\r\n    TestService.getUsers().\r\n        then(function (users) {\r\n            $scope.users = users;\r\n        });\r\n}\r\n```\r\n\r\n**AngularJS** **Services** implement **Singleton Design Pattern** so only one object is created for an application.\r\n\r\nFollow Me\r\n---\r\n[Github](https://github.com/AmitThakkar)\r\n\r\n[Twitter](https://twitter.com/amit_thakkar01)\r\n\r\n[LinkedIn](https://in.linkedin.com/in/amitthakkar01)\r\n\r\n[More Blogs By Me](https://amitthakkar.github.io/)\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}